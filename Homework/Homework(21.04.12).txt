17. Why do we need default constructor in Java classes? 
디폴트 생성자는 매개변수가 없으며 클래스에 생성자가 하나도 없는 경우 컴파일러가 디폴트 생성자를 만들어준다. 
그러나 생성자가 하나라도 있다면 컴파일러가 디폴트 생성자를 추가하지 않는다... 
컴파일러가 만들어주는 디폴트 생성자는 아무 것도 없는 빈 함수이다. 이 때 객체의 초기화 방식은 일반 변수와 같은 규칙이 적용되는데 전역이나 정적 객체라면 모든 멤버가 0으로 초기화되고 지역 객체라면 초기화되지 않는 쓰레기값을 가진다.
생성자가 없을 경우 컴파일러가 디폴트 생성자를 만들기 때문에 생성자를 전혀 정의하지 않아도 객체를 선언할 수 있다. 


18. What is the value returned by Constructor in Java? 
생성자에는 return값이 없다. 생성자도 메서드이기 때문에 리턴값이 없다는 의미의 void를 적어야 하지만, 모든 생성자가 리턴값이 없으므로 void를 생략하도록 한 것이다. 


19. Can we inherit a Constructor? 
부모 클래스의 생성자는 상속되지 않고, 자식 클래스로 인스턴스를 생성할 때 자동적으로 부모의 기본 생성자가 호출된다. 
부모 클래스의 생성자가 매개변수를 갖고 있다면 자식 클래스를 인스턴스화 할 때 자동으로 호출되지 않는다. 
그러므로 자식 생성자에서 명시적으로 부모 생성자를 호출해야만 한다. 


20. Why constructors cannot be final, static, or abstract in Java? 
생성자는 기본적으로 새로운 인스턴스를 만들 때 클래스가 호출되는 형태이기에 마지막이라기 보단 처음에 실행되고, 정적이다 말할 수 없고, 추상화를 하기도 어렵다. 
만약 이를 무시하고 생성자를 정의한다면 컴파일러는 허용되지 않는 수식이라며 예외를 출력할 것이다. 


ALGORITHM HOMEWORK(#26)
어떤 수 x와 n이 주어졌을 때 조건에 따라 x가 n의 배수인지 판별하는 코드를 작성하라.
x는 0 이상의 정수이며 조건에 맞지 않는 입력은 주어지지 않는다.
여기서 하나의 함수인지 여러 함수인지는 본인이 선택하면 된다.

단 절대 산술연산자 중 %와 /는 코드에 없도록 한다.
그리고 divmod() 함수를 쓰는 것도 금지한다
결과는 True 또는 False로 반환


def multi(x, n):
    if x < 1 or n < 1: # x 또는 n이 음수일 때 
        return -1 # -1 반환 
    
    while n <= x: # x가 n보다 크거나 같을 때 
        x -= n # x에 x - n 대입을 0이 될 때까지 반복 
        # print(x) # 결과값 체크 
        
    return x == 0 # x가 0이면 True, 0이 아니면 False 반환 

x = int(input()) # 0 이상의 정수만 가능 
n = int(input()) # 음수, 0이 들어오면 안됨 

print(multi(x, n))
